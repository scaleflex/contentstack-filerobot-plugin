{"version":3,"file":"static/js/487.8a2eadb4.chunk.js","mappings":"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","sources":["common/utils/SelectorPageUtils.tsx","containers/SelectorPage/index.tsx"],"sourcesContent":["// function to load script\nconst loadDAMScript = (url: string) =>\n  new Promise((resolve) => {\n    const scriptExists = document.getElementById(\"DAMScript\");\n    if (scriptExists) {\n      scriptExists.onload = function () {\n        resolve(true);\n      };\n    } else {\n      const DAMScript: any = document.createElement(\"script\");\n      const bodyTag = document.getElementsByTagName(\"body\")?.[0];\n      DAMScript.src = url;\n      DAMScript.id = \"DAMScript\";\n      DAMScript.type = \"text/javascript\";\n      if (DAMScript?.readyState) {\n        DAMScript.onreadystatechange = function () {\n          if (\n            DAMScript.readyState === \"loaded\" ||\n            DAMScript.readyState === \"complete\"\n          ) {\n            DAMScript.onreadystatechange = null;\n            resolve(true);\n          }\n        };\n      } else {\n        DAMScript.onload = function () {\n          resolve(true);\n        };\n      }\n      bodyTag.appendChild(DAMScript);\n    }\n  });\n\nconst SelectorPageUtils = {\n  loadDAMScript,\n};\n\nexport default SelectorPageUtils;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport SelectorPageUtils from \"../../common/utils/SelectorPageUtils\";\nimport rootConfig from \"../../root_config\";\nimport { TypeErrorFn } from \"../../common/types/types\";\nimport Explorer from '@filerobot/explorer'\nimport Filerobot from '@filerobot/core'\nimport XHRUpload from '@filerobot/xhr-upload'\nimport \"@filerobot/core/dist/style.min.css\";\nimport \"@filerobot/explorer/dist/style.min.css\";\n\nlet isScriptLoaded: any = false;\nlet url: string = \"\";\nconst SelectorPage: React.FC<any> = function () {\n\n  const filerobot = useRef<any>(null);\n  // state of isError flag\n  const [isErrorPresent, setIsErrorPresent] = React.useState<boolean>(false);\n  // config in selector page\n  const [config, setConfig] = useState<any>();\n  // state for warning text to be used when error\n  const [warningText, setWarningText] = useState<string>(\n    ''\n  );\n  const [selectedAssetIds, setSelectedAssetIds] = useState<string[]>([]);\n  const damContainer = useRef(null);\n\n  // function to check null or missing values of config\n  const checkConfigValues = (configParams: any) => {\n    const configFieldsLength = rootConfig?.damEnv?.CONFIG_FIELDS?.length;\n    for (let i = 0; i < configFieldsLength; i += 1) {\n      if (!configParams[rootConfig?.damEnv?.CONFIG_FIELDS?.[i]]) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // function to set error\n  const setError = ({\n    isErr = false,\n    errorText = 'errorText',\n  }: TypeErrorFn) => {\n    setIsErrorPresent(isErr);\n    if (errorText) setWarningText(errorText);\n  };\n\n  const successFn = (assets: any[]) => {\n    window.opener.postMessage(\n      {\n        message: \"add\",\n        selectedAssets: assets,\n        type: rootConfig?.damEnv?.DAM_APP_NAME,\n      },\n      url\n    );\n    window.close();\n  };\n\n  const closeFn = () => window.close();\n\n  // function to load dam script and mount component\n  const compactViewImplementation = async (\n    configParams: any,\n    selectedIds: string[]\n  ) => {\n    if (rootConfig?.damEnv?.IS_DAM_SCRIPT) {\n      isScriptLoaded = await SelectorPageUtils.loadDAMScript(\n        rootConfig?.damEnv?.DAM_SCRIPT_URL as string\n      );\n      if (isScriptLoaded === true) {\n        // condition's for checking config variable's\n        if (checkConfigValues(configParams)) {\n          setIsErrorPresent(true);\n          return;\n        }\n        setIsErrorPresent(false);\n        rootConfig?.openComptactView?.(\n          configParams,\n          selectedIds,\n          successFn,\n          closeFn,\n          {\n            containerRef: damContainer,\n            containerClass: \"selector_container\",\n            containerId: \"selector_container\",\n          },\n          setError\n        );\n      }\n    }\n  };\n  const handleMessage = (event: MessageEvent) => {\n    const { data } = event;\n    if (data?.config) {\n      if (\n        data?.message === \"init\" &&\n        data?.type === rootConfig?.damEnv?.DAM_APP_NAME\n      ) {\n          const container = data?.config?.[\"container\"] || \"\";\n          const securityTemplateId = data?.config?.[\"security_template_id\"] || \"\";  \n          filerobot.current = Filerobot({\n            securityTemplateId: securityTemplateId,\n            container: container,\n            dev: false,\n          })\n          .use(Explorer, {\n          config: {\n              limit: 50,\n              tagging: {\n              language: \"en\",\n              confidence: 60,\n              limit: 10,\n              }\n          },\n          target: \"#filerobot-widget\",\n          inline: true,\n          width: \"100%\",\n          height: \"100%\",\n          dismissUrlPathQueryUpdate: true,\n          showDetailsView: false,\n          showFolderTree: true,\n          floaty: false,\n          disableDownloadButton: true,\n          hideDownloadButtonIcon: true,\n          preventDownloadDefaultBehavior: true,\n          resetAfterClose: true,\n              // reference https://github.com/scaleflex/commercetools-filerobot-plugin/blob/master/src/components/filerobot/filerobot-dam.jsx\n              locale: {\n              strings: {\n                  mutualizedExportButtonLabel: 'Insert',\n                  mutualizedDownloadButton: 'Insert',\n              }\n          },\n          })\n          .use(XHRUpload) \n          .on('export', function (files, popupExportSuccessMsgFn, downloadFilesPackagedFn, downloadFileFn) {  \n            const fileArr:any[] = []\n            files.forEach((selected: any) => {\n              const storeData = {\n                    link: selected.link,\n                    file:{\n                      name: selected.file.name,\n                      uuid: selected.file.uuid,\n                      type: selected.file.type,\n                      info: {\n                        img_w: selected.file.info.img_w,\n                        img_h: selected.file.info.img_h,\n                      },\n                      size: {\n                        bytes: selected.file.size.bytes\n                      }\n                    }\n                  }\n              fileArr.push(storeData)\n            })\n            successFn(fileArr)\n          });\n      \n          setConfig(data?.config);\n          compactViewImplementation(data?.config, data?.selectedIds);\n          setSelectedAssetIds(data?.selectedIds);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const { opener: windowOpener } = window;\n    if (windowOpener) {\n      const queryString = window.location.href\n        ?.split(\"?\")?.[1]\n        ?.split(\"=\")?.[1];\n      let postMessageUrl: string;\n      switch (queryString) {\n        case \"NA\":\n          postMessageUrl = process.env.REACT_APP_UI_URL_NA ?? \"\";\n          break;\n        case \"EU\":\n          postMessageUrl = process.env.REACT_APP_UI_URL_EU ?? \"\";\n          break;\n        case \"AZURE_NA\":\n          postMessageUrl = process.env.REACT_APP_UI_URL_AZURE_NA ?? \"\";\n          break;\n        case \"CUSTOM-FIELD\":\n          postMessageUrl = process.env.REACT_APP_CUSTOM_FIELD_URL ?? \"\";\n          break;\n        default:\n          postMessageUrl = process.env.REACT_APP_UI_URL_AZURE_EU ?? \"\";\n      }\n      url = postMessageUrl;\n      window.addEventListener(\"message\", handleMessage, false);\n      windowOpener.postMessage({ message: \"openedReady\" }, postMessageUrl);\n      window.addEventListener(\"beforeunload\", () => {\n        windowOpener.postMessage({ message: \"close\" }, postMessageUrl);\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"selector-page-wrapper\" data-testid=\"selector-wrapper\">\n      <div\n        className=\"selector_container mt-30 mr-20 ml-20 mb-20\"\n        id=\"selector_container\"\n        data-testid=\"selector-container\"\n        ref={damContainer}\n      >\n        {isErrorPresent ? (\n          <div className=\"info-wrapper\" data-testid=\"warning-component\">\n            isErrorPresent\n          </div>\n        ) : (\n          // eslint-disable-next-line\n          <>\n            {rootConfig?.damEnv?.IS_DAM_SCRIPT ? (\n              // If Compact view script avaialble\n              // eslint-disable-next-line\n              <div id=\"filerobot-widget\"></div>\n            ) : (\n              // If there is no script custom component will be added\n            //   rootConfig?.customSelectorComponent?.(\n            //     config,\n            //     setError,\n            //     successFn,\n            //     closeFn,\n            //     selectedAssetIds\n            //   )\n            <div id=\"filerobot-widget\"></div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SelectorPage;\n"],"names":["SelectorPageUtils","loadDAMScript","url","Promise","resolve","scriptExists","document","getElementById","onload","_document$getElements","DAMScript","createElement","bodyTag","getElementsByTagName","src","id","type","readyState","onreadystatechange","appendChild","isScriptLoaded","_rootConfig$damEnv7","filerobot","useRef","isErrorPresent","setIsErrorPresent","React","config","setConfig","useState","warningText","setWarningText","selectedAssetIds","setSelectedAssetIds","damContainer","setError","_ref","isErr","errorText","successFn","assets","_rootConfig$damEnv3","window","opener","postMessage","message","selectedAssets","rootConfig","damEnv","DAM_APP_NAME","close","closeFn","compactViewImplementation","async","configParams","selectedIds","_rootConfig$damEnv4","_rootConfig$damEnv5","IS_DAM_SCRIPT","DAM_SCRIPT_URL","_rootConfig$openCompt","_rootConfig$damEnv","_rootConfig$damEnv$CO","configFieldsLength","CONFIG_FIELDS","length","i","_rootConfig$damEnv2","_rootConfig$damEnv2$C","checkConfigValues","openComptactView","call","containerRef","containerClass","containerId","handleMessage","event","data","_rootConfig$damEnv6","_data$config","_data$config2","container","securityTemplateId","current","Filerobot","dev","use","Explorer","limit","tagging","language","confidence","target","inline","width","height","dismissUrlPathQueryUpdate","showDetailsView","showFolderTree","floaty","disableDownloadButton","hideDownloadButtonIcon","preventDownloadDefaultBehavior","resetAfterClose","locale","strings","mutualizedExportButtonLabel","mutualizedDownloadButton","XHRUpload","on","files","popupExportSuccessMsgFn","downloadFilesPackagedFn","downloadFileFn","fileArr","forEach","selected","storeData","link","file","name","uuid","info","img_w","img_h","size","bytes","push","useEffect","_process$env$REACT_AP","_process$env$REACT_AP2","_process$env$REACT_AP3","_process$env$REACT_AP4","_process$env$REACT_AP5","windowOpener","_window$location$href","_window$location$href2","_window$location$href3","_window$location$href4","postMessageUrl","location","href","split","process","addEventListener","_jsx","className","children","ref","_Fragment"],"sourceRoot":""}