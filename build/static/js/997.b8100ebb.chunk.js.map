{"version":3,"file":"static/js/997.b8100ebb.chunk.js","mappings":"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","sources":["components/WarningMessage/index.tsx","common/utils/SelectorPageUtils.tsx","containers/SelectorPage/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { Icon, Info } from \"@contentstack/venus-components\";\nimport { Props } from \"../../common/types/types\";\n\nconst WarningMessage: React.FC<Props> = function ({ content }) {\n  const infoIcon = (\n    <Icon icon=\"Warning\" size=\"small\" data-testid=\"warning-icon\" />\n  );\n  return (\n    <Info\n      className=\"component\"\n      icon={infoIcon}\n      content={content?.split(\"\\n\")?.map((i: string) => (\n        <div key={`key-${i}`} dangerouslySetInnerHTML={{ __html: i }} />\n      ))}\n      type=\"attention\"\n    />\n  );\n};\nexport default WarningMessage;\n","// function to load script\nconst loadDAMScript = (url: string) =>\n  new Promise((resolve) => {\n    const scriptExists = document.getElementById(\"DAMScript\");\n    if (scriptExists) {\n      scriptExists.onload = function () {\n        resolve(true);\n      };\n    } else {\n      const DAMScript: any = document.createElement(\"script\");\n      const bodyTag = document.getElementsByTagName(\"body\")?.[0];\n      DAMScript.src = url;\n      DAMScript.id = \"DAMScript\";\n      DAMScript.type = \"text/javascript\";\n      if (DAMScript?.readyState) {\n        DAMScript.onreadystatechange = function () {\n          if (\n            DAMScript.readyState === \"loaded\" ||\n            DAMScript.readyState === \"complete\"\n          ) {\n            DAMScript.onreadystatechange = null;\n            resolve(true);\n          }\n        };\n      } else {\n        DAMScript.onload = function () {\n          resolve(true);\n        };\n      }\n      bodyTag.appendChild(DAMScript);\n    }\n  });\n\nconst SelectorPageUtils = {\n  loadDAMScript,\n};\n\nexport default SelectorPageUtils;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport SelectorPageUtils from \"../../common/utils/SelectorPageUtils\";\nimport rootConfig from \"../../root_config\";\nimport { v4 } from \"uuid\";\nimport { TypeErrorFn } from \"../../common/types/types\";\nimport WarningMessage from \"../../components/WarningMessage\";\nimport Explorer from '@filerobot/explorer'\nimport Filerobot from '@filerobot/core'\nimport XHRUpload from '@filerobot/xhr-upload'\nimport localeTexts from \"../../common/locales/en-us/index\";\nimport { isEmpty, isNull } from \"lodash\";\nimport \"./style.css\";\nimport \"@filerobot/core/dist/style.min.css\";\nimport \"@filerobot/explorer/dist/style.min.css\";\n\nlet isScriptLoaded: any = false;\nlet url: string = \"\";\nconst SelectorPage: React.FC<any> = function () {\n\n  const filerobot = useRef<any>(null);\n  // state of isError flag\n  const [isErrorPresent, setIsErrorPresent] = React.useState<boolean>(false);\n  // config in selector page\n  const [config, setConfig] = useState<any>();\n  // state for warning text to be used when error\n  const [warningText, setWarningText] = useState<string>(\n    localeTexts.Warnings.incorrectConfig\n  );\n  const [selectedAssetIds, setSelectedAssetIds] = useState<string[]>([]);\n  const damContainer = useRef(null);\n\n  // function to check null or missing values of config\n  const checkConfigValues = (configParams: any) => {\n    const configFieldsLength = rootConfig?.damEnv?.CONFIG_FIELDS?.length;\n    for (let i = 0; i < configFieldsLength; i += 1) {\n      if (!configParams[rootConfig?.damEnv?.CONFIG_FIELDS?.[i]]) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // function to set error\n  const setError = ({\n    isErr = false,\n    errorText = localeTexts.Warnings.incorrectConfig,\n  }: TypeErrorFn) => {\n    setIsErrorPresent(isErr);\n    if (errorText) setWarningText(errorText);\n  };\n\n  const successFn = (assets: any[]) => {\n    window.opener.postMessage(\n      {\n        message: \"add\",\n        selectedAssets: assets,\n        type: rootConfig?.damEnv?.DAM_APP_NAME,\n      },\n      url\n    );\n    window.close();\n  };\n\n  const closeFn = () => window.close();\n\n  // function to load dam script and mount component\n  const compactViewImplementation = async (\n    configParams: any,\n    selectedIds: string[]\n  ) => {\n    if (rootConfig?.damEnv?.IS_DAM_SCRIPT) {\n      isScriptLoaded = await SelectorPageUtils.loadDAMScript(\n        rootConfig?.damEnv?.DAM_SCRIPT_URL as string\n      );\n      if (isScriptLoaded === true) {\n        // condition's for checking config variable's\n        if (checkConfigValues(configParams)) {\n          setIsErrorPresent(true);\n          return;\n        }\n        setIsErrorPresent(false);\n        rootConfig?.openComptactView?.(\n          configParams,\n          selectedIds,\n          successFn,\n          closeFn,\n          {\n            containerRef: damContainer,\n            containerClass: \"selector_container\",\n            containerId: \"selector_container\",\n          },\n          setError\n        );\n      }\n    }\n  };\n  const handleMessage = (event: MessageEvent) => {\n    const { data } = event;\n    if (data?.config) {\n      if (\n        data?.message === \"init\" &&\n        data?.type === rootConfig?.damEnv?.DAM_APP_NAME\n      ) {\n          \n          const container = data?.config?.[\"container\"] || \"\";\n          const securityTemplateId = data?.config?.[\"security_template_id\"] || \"\";  \n\n          if (isEmpty(container) || isEmpty(securityTemplateId))\n          {\n            setIsErrorPresent(true)\n          } else {\n            filerobot.current = Filerobot({\n              securityTemplateId: securityTemplateId,\n              container: container,\n              dev: false,\n            })\n            .use(Explorer, {\n            config: {\n                limit: 50,\n                tagging: {\n                language: \"en\",\n                confidence: 60,\n                limit: 10,\n                }\n            },\n            target: \"#filerobot-widget\",\n            inline: true,\n            width: \"100%\",\n            height: \"100%\",\n            dismissUrlPathQueryUpdate: true,\n            showDetailsView: false,\n            showFolderTree: true,\n            floaty: false,\n            disableDownloadButton: true,\n            hideDownloadButtonIcon: true,\n            preventDownloadDefaultBehavior: true,\n            resetAfterClose: true,\n                // reference https://github.com/scaleflex/commercetools-filerobot-plugin/blob/master/src/components/filerobot/filerobot-dam.jsx\n                locale: {\n                strings: {\n                    mutualizedExportButtonLabel: 'Insert',\n                    mutualizedDownloadButton: 'Insert',\n                }\n            },\n            })\n            .use(XHRUpload) \n            .on('export', function (files, popupExportSuccessMsgFn, downloadFilesPackagedFn, downloadFileFn) {  \n              const fileArr:any[] = []\n              files.forEach((selected: any) => {\n                const storeData = {\n                      link: selected.link,\n                      file:{\n                        name: selected.file.name,\n                        uuid: selected.file.uuid,\n                        uid: v4()?.split(\"-\")?.join(\"\"),\n                        type: selected.file.type,\n                        info: {\n                          img_w: selected.file.info.img_w,\n                          img_h: selected.file.info.img_h,\n                        },\n                        size: {\n                          bytes: selected.file.size.bytes\n                        }\n                      }\n                    }\n                fileArr.push(storeData)\n              })\n              successFn(fileArr)\n            });\n        \n            setConfig(data?.config);\n            compactViewImplementation(data?.config, data?.selectedIds);\n            setSelectedAssetIds(data?.selectedIds);\n          }\n      }\n    }\n  };\n\n  useEffect(() => {\n    const { opener: windowOpener } = window;\n    if (windowOpener) {\n      const queryString = window.location.href\n        ?.split(\"?\")?.[1]\n        ?.split(\"=\")?.[1];\n      let postMessageUrl: string;\n      switch (queryString) {\n        case \"NA\":\n          postMessageUrl = process.env.REACT_APP_UI_URL_NA ?? \"\";\n          break;\n        case \"EU\":\n          postMessageUrl = process.env.REACT_APP_UI_URL_EU ?? \"\";\n          break;\n        case \"AZURE_NA\":\n          postMessageUrl = process.env.REACT_APP_UI_URL_AZURE_NA ?? \"\";\n          break;\n        case \"CUSTOM-FIELD\":\n          postMessageUrl = process.env.REACT_APP_CUSTOM_FIELD_URL ?? \"\";\n          break;\n        default:\n          postMessageUrl = process.env.REACT_APP_UI_URL_AZURE_EU ?? \"\";\n      }\n      url = postMessageUrl;\n      window.addEventListener(\"message\", handleMessage, false);\n      windowOpener.postMessage({ message: \"openedReady\" }, postMessageUrl);\n      window.addEventListener(\"beforeunload\", () => {\n        windowOpener.postMessage({ message: \"close\" }, postMessageUrl);\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"selector-page-wrapper\" data-testid=\"selector-wrapper\">\n      <div\n        className=\"selector-page-header flex FullPage_Modal_Header\"\n        data-testid=\"selector-header\"\n      >\n        <div>\n          <div\n            className=\"selector-page-header-image\"\n            data-testid=\"selector-logo\"\n          >\n            <img\n              src={rootConfig?.damEnv?.SELECTOR_PAGE_LOGO}\n              alt={`${localeTexts.SelectorPage.title} Logo`}\n            />\n          </div>\n          <span data-testid=\"selector-title\">\n            {localeTexts.SelectorPage.title}\n          </span>\n        </div>\n      </div>\n      <div\n        className=\"selector_container mt-30 mr-20 ml-20 mb-20\"\n        id=\"selector_container\"\n        data-testid=\"selector-container\"\n        ref={damContainer}\n      >\n        {isErrorPresent ? (\n          <div className=\"info-wrapper\" data-testid=\"warning-component\">\n             <WarningMessage content={warningText} />\n          </div>\n        ) : (\n          // eslint-disable-next-line\n          <>\n            {rootConfig?.damEnv?.IS_DAM_SCRIPT ? (\n              // If Compact view script avaialble\n              // eslint-disable-next-line\n              <div id=\"filerobot-widget\"></div>\n            ) : (\n              // If there is no script custom component will be added\n            //   rootConfig?.customSelectorComponent?.(\n            //     config,\n            //     setError,\n            //     successFn,\n            //     closeFn,\n            //     selectedAssetIds\n            //   )\n            <div id=\"filerobot-widget\"></div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SelectorPage;\n"],"names":["_ref","_content$split","content","infoIcon","_jsx","Icon","icon","size","Info","className","split","map","i","dangerouslySetInnerHTML","__html","concat","type","SelectorPageUtils","loadDAMScript","url","Promise","resolve","scriptExists","document","getElementById","onload","_document$getElements","DAMScript","createElement","bodyTag","getElementsByTagName","src","id","readyState","onreadystatechange","appendChild","isScriptLoaded","_rootConfig$damEnv7","_rootConfig$damEnv8","filerobot","useRef","isErrorPresent","setIsErrorPresent","React","config","setConfig","useState","warningText","setWarningText","localeTexts","Warnings","incorrectConfig","selectedAssetIds","setSelectedAssetIds","damContainer","setError","isErr","errorText","successFn","assets","_rootConfig$damEnv3","window","opener","postMessage","message","selectedAssets","rootConfig","damEnv","DAM_APP_NAME","close","closeFn","compactViewImplementation","async","configParams","selectedIds","_rootConfig$damEnv4","_rootConfig$damEnv5","IS_DAM_SCRIPT","DAM_SCRIPT_URL","_rootConfig$openCompt","_rootConfig$damEnv","_rootConfig$damEnv$CO","configFieldsLength","CONFIG_FIELDS","length","_rootConfig$damEnv2","_rootConfig$damEnv2$C","checkConfigValues","openComptactView","call","containerRef","containerClass","containerId","handleMessage","event","data","_rootConfig$damEnv6","_data$config","_data$config2","container","securityTemplateId","isEmpty","current","Filerobot","dev","use","Explorer","limit","tagging","language","confidence","target","inline","width","height","dismissUrlPathQueryUpdate","showDetailsView","showFolderTree","floaty","disableDownloadButton","hideDownloadButtonIcon","preventDownloadDefaultBehavior","resetAfterClose","locale","strings","mutualizedExportButtonLabel","mutualizedDownloadButton","XHRUpload","on","files","popupExportSuccessMsgFn","downloadFilesPackagedFn","downloadFileFn","fileArr","forEach","selected","_v","_v$split","storeData","link","file","name","uuid","uid","v4","join","info","img_w","img_h","bytes","push","useEffect","_process$env$REACT_AP","_process$env$REACT_AP2","_process$env$REACT_AP3","_process$env$REACT_AP4","_process$env$REACT_AP5","windowOpener","_window$location$href","_window$location$href2","_window$location$href3","_window$location$href4","postMessageUrl","location","href","process","addEventListener","_jsxs","children","SELECTOR_PAGE_LOGO","alt","SelectorPage","title","ref","WarningMessage","_Fragment"],"sourceRoot":""}